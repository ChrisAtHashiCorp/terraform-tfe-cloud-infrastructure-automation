projects:
  globals:
    stage: identity
    account_number: "209601340993"

  terraform:
    account-settings:
      vars: {}

    cloudtrail:
      vars: {}

    iam-primary-roles:
      vars:
        # When assume_role_restricted is true, assuming other roles in the identity
        # account is restricted based on the role configuration, but that can only
        # be set up after the roles are created. When the roles do not yet exist,
        # such as during cold start, set assume_role_restricted false, and all
        # roles will be able to assume other roles.
        assume_role_restricted: true

        primary_account_id: "209601340993" # `identity` account

        # The maximum session duration (in seconds) that you want to set for the IAM roles.
        # If you do not specify a value for this setting, the default maximum of one hour is applied.
        # This setting can have a value from 1 hour to 12 hours
        iam_role_max_session_duration: 43200

        # delegated_ roles_config is not just the set of roles for the identity account, it is
        # also the template for roles in all other "delegated" accounts.
        #
        # The role_policy_arn defines the policy for that role in the identity account,
        # which is why, for example, poweruser has ViewOnlyAccess. The policy for the
        # role in the delegated accounts is set in the iam-delegated-roles project.
        #
        # The trusted_primary_roles list indicates which roles in identity are allowed
        # to access those roles. So "ops" can access "poweruser", for example.
        delegated_roles_config:
          admin:
            role_policy_arns: ["arn:aws:iam::aws:policy/AdministratorAccess"]
            role_description: "Role with AdministratorAccess permissions"
            sso_login_enabled: true
            # list of roles in primary that can assume into this role in delegated accounts
            # primary admin can assume delegated admin
            trusted_primary_roles: ["admin"]

          ops:
            role_policy_arns: ["arn:aws:iam::aws:policy/PowerUserAccess"]
            role_description: "Role for OPS personnel"
            sso_login_enabled: true
            trusted_primary_roles: ["admin", "ops"]

          poweruser:
            role_policy_arns:
            -  "arn:aws:iam::aws:policy/job-function/ViewOnlyAccess"
            -  "delegated_assume_role"
            role_description: "Role for Power Users (read/write)"
            sso_login_enabled: true
            trusted_primary_roles: ["admin", "ops", "poweruser"]

          observer:
            role_policy_arns:
            -  "arn:aws:iam::aws:policy/job-function/ViewOnlyAccess"
            -  "delegated_assume_role"
            role_description: "Observer (read-only) role"
            sso_login_enabled: true
            trusted_primary_roles: ["admin", "ops", "observer"]

          terraform:
            role_policy_arns:
            - "arn:aws:iam::aws:policy/job-function/ViewOnlyAccess"
            - "delegated_assume_role"
            role_description: "Role with permissions for terraform automation"
            sso_login_enabled: false
            # Terraform is too powerful a role to allow powerusers to access it
            trusted_primary_roles: ["admin", "ops", "codefresh", "terraform"]

          helm:
            role_policy_arns:
            - "arn:aws:iam::aws:policy/job-function/ViewOnlyAccess"
            - "delegated_assume_role"
            role_description: "Role with permissions for helm automation"
            sso_login_enabled: false
            # Helm is too powerful a role to allow powerusers to access it
            trusted_primary_roles: ["admin", "ops", "codefresh", "helm"]


        # primary_roles_config is for roles that only appear in the identity account.
        # Users or services log in with one of these roles and assume
        # delegated roles in other accounts.
        primary_roles_config:
          codefresh:
            role_policy_arns: ["codefresh"]
            role_description: "Role for our privileged Codefresh Runner"
            sso_login_enabled: false
            trusted_primary_roles: ["admin", "ops"]

        codefresh_runner_sa_roles: []

    sso:
      vars:
        saml_providers:
          tanzle-gsuite:  GoogleIDPMetadata-tanzle.com.xml
          cloudposse-gsuite: GoogleIDPMetadata-cloudposse.com.xml
